<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rainsho.dao.LogMapper">
	<resultMap id="BaseResultMap" type="com.rainsho.entity.Log">
		<id column="lid" property="lid" jdbcType="INTEGER" />
		<!-- <result column="uid" property="uid" jdbcType="INTEGER" /> -->
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<association property="user" javaType="User" column="uid"
			select="selectUser"></association>
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.rainsho.entity.LogWithBLOBs"
		extends="BaseResultMap">
		<result column="txt1" property="txt1" jdbcType="LONGVARCHAR" />
		<result column="txt2" property="txt2" jdbcType="LONGVARCHAR" />
		<result column="txt3" property="txt3" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		lid, uid, createtime
	</sql>
	<sql id="Blob_Column_List">
		txt1, txt2, txt3
	</sql>
	<select id="selectUser" resultType="User" parameterType="Integer">
		select
		uid, username, password, realname, admin
		from users where uid = #{id}
	</select>
	<select id="selectAllLogs" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from logs
	</select>
	<select id="selectLogsByUid" resultMap="ResultMapWithBLOBs"
		parameterType="Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from logs
		where uid = #{id}
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from logs
		where lid = #{lid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from logs
		where lid = #{lid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.rainsho.entity.LogWithBLOBs">
		insert into logs (lid, uid,
		createtime,
		txt1, txt2, txt3
		)
		values (#{lid,jdbcType=INTEGER},
		#{user.uid,jdbcType=INTEGER},
		#{createtime,jdbcType=TIMESTAMP},
		#{txt1,jdbcType=LONGVARCHAR}, #{txt2,jdbcType=LONGVARCHAR},
		#{txt3,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.rainsho.entity.LogWithBLOBs">
		insert into logs
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="lid != null">
				lid,
			</if>
			<if test="user != null">
				uid,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="txt1 != null">
				txt1,
			</if>
			<if test="txt2 != null">
				txt2,
			</if>
			<if test="txt3 != null">
				txt3,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="lid != null">
				#{lid,jdbcType=INTEGER},
			</if>
			<if test="user != null">
				#{user.uid,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="txt1 != null">
				#{txt1,jdbcType=LONGVARCHAR},
			</if>
			<if test="txt2 != null">
				#{txt2,jdbcType=LONGVARCHAR},
			</if>
			<if test="txt3 != null">
				#{txt3,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.rainsho.entity.LogWithBLOBs">
		update logs
		<set>
			<if test="user != null">
				uid = #{user.uid,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="txt1 != null">
				txt1 = #{txt1,jdbcType=LONGVARCHAR},
			</if>
			<if test="txt2 != null">
				txt2 = #{txt2,jdbcType=LONGVARCHAR},
			</if>
			<if test="txt3 != null">
				txt3 = #{txt3,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where lid = #{lid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rainsho.entity.LogWithBLOBs">
		update
		logs
		set uid = #{user.uid,jdbcType=INTEGER},
		createtime =
		#{createtime,jdbcType=TIMESTAMP},
		txt1 = #{txt1,jdbcType=LONGVARCHAR},
		txt2 = #{txt2,jdbcType=LONGVARCHAR},
		txt3 =
		#{txt3,jdbcType=LONGVARCHAR}
		where lid = #{lid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.rainsho.entity.Log">
		update logs
		set uid
		= #{user.uid,jdbcType=INTEGER},
		createtime =
		#{createtime,jdbcType=TIMESTAMP}
		where lid = #{lid,jdbcType=INTEGER}
	</update>
</mapper>